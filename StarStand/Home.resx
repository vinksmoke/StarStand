<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>